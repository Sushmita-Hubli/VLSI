MVM

signal result:STD_LOGIC_VECTOR(4 downto 0):="00000";
begin
process(A,B,F)
begin
CASE F IS
when "000" =>
result <= '0' & (A AND B);
when "001" =>
result <= '0' & (A NAND B);
when "010" =>
result <= '0' & (A OR B);
when "011" =>
result <= '0' & (A XOR B);
when "100" =>
result <= '0' & (A XNOR B);
when "101" =>
result <= '0' & (A NOR B);
when "110" =>
result <= ('0' & A)+('0' & B);
when others =>
if A < B then
result <= '0' & (NOT B);
result <= result+1;
result <= ('0' & A) + result;
result <= (NOT result) +1;
result <= (NOT(('0' & A) + ('0' &(NOT B)) + 1))+1;
else
result <=('0' & A)-('0' & B);
end if ;
end CASE;
end process;
Y <= result(3 downto 0);
C_B <= result(4);
end ALU_4bit_arch;


TVM

-- Stimulus process
stim_proc_F: process
begin
F <= F + 1;
wait for 25 ns;
end process;
